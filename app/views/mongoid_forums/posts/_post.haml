/ %code= post.public_methods
- if @posts.first_page? == false || @posts.first_page? == true && @posts[0].id.to_json != post.id.to_json
  .post{id: post.id}
    %header
      .row.-distribute-between.-no-gutter-vert
        .col
          = player_tooltip_element(post.user.forum_display_name, true, false)
          %span.text-muted
            = time_ago_in_words(post.created_at)
            ago
            - if post.updated_at != post.created_at
              %span
                \- edited
                = time_ago_in_words(post.updated_at)
                ago
        .col.text-right
          = link_to 'Quote', new_topic_post_path(post.topic_id, :reply_to_id => post.id), :class => "btn btn-default btn-sm"
          - if mongoid_forums_user && post.owner_or_admin?(mongoid_forums_user)
            - if can?(:edit_post, post.topic.forum)
              = link_to "Edit", edit_topic_post_path(post.topic_id, post), :class => "btn btn-default btn-sm"
            - if can?(:destroy_post, post.topic.forum)
              = button_to "Delete", topic_post_path(post.topic_id, post), :method => :delete, :class => "btn btn-danger btn-sm"

    - if post.reply_to_id
      = render :partial => 'mongoid_forums/posts/quoted', :locals => {:post => post}
    .post-content= mongoid_forums_format(post.text)
    - if post.replies?
      %span.text-muted
        %i.fa.fa-reply.small
        =post.replies.map { |reply| reply.user.forum_display_name }.uniq.to_sentence + " replied to this post"
  %hr
